services:
  ms1:
    build:
      context: ./
      dockerfile: ./ms1/Dockerfile
      args:
      - PROJECT_DIR=ms1
      - EXPOSE_PORT=40001
    environment:
      IP: 127.0.0.1
      PORT: :40001
      SERVICE_REGISTRY_IP: localhost
      SERVICE_REGISTRY_PORT: :10001
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:40001/health']
      interval: 3s
      timeout: 3s
      retries: 3
    depends_on:
      p1:
        condition: service_healthy
    ports:
    - 40001:40001
    network_mode: host
  p1:
    build:
      context: ./
      dockerfile: ./p1/Dockerfile
      args:
      - PROJECT_DIR=p1
      - EXPOSE_PORT=10001
    environment:
      IP: 127.0.0.1
      PORT: :10001
      SERVICE_REGISTRY_IP: localhost
      SERVICE_REGISTRY_PORT: :7777
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:10001/health']
      interval: 3s
      timeout: 3s
      retries: 3
    depends_on:
      service_registry:
        condition: service_healthy
    ports:
    - 10001:10001
    network_mode: host
  service_registry:
    build:
      context: ./
      dockerfile: ./service_registry/Dockerfile
      args:
      - EXPOSE_PORT=7777
    environment:
      IP: 127.0.0.1
      PORT: :7777
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:7777/health']
      interval: 3s
      timeout: 3s
      retries: 3
    ports:
    - 7777:7777
    network_mode: host
